/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package drawgif;

import Interfaz.EditorDeTexto;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author jhonny
 */
public class panelTxt extends javax.swing.JPanel {

    /**
     * Creates new form panelTxt
     */
    NumeroLinea linea;
    public String contenido;
    File archivo;

    public JTextArea getTexto() {
       
        return texto;
    }
    
    public panelTxt() {
        initComponents();
        linea = new NumeroLinea(texto);
        jScrollPane1.setRowHeaderView(linea);

    }

    public void setArchivo(File archivo) {
        this.archivo = archivo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        texto.setColumns(20);
        texto.setFont(new java.awt.Font("Ubuntu Mono", 1, 16)); // NOI18N
        texto.setLineWrap(true);
        texto.setRows(5);
        jScrollPane1.setViewportView(texto);

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(0, 24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int opc = JOptionPane.showConfirmDialog(this, "Desea guardar los cambios Hechos", "", 1);
        switch (opc) {
            case 0:
                save();
                EditorDeTexto.Panel.remove(EditorDeTexto.Panel.getSelectedIndex());

                break;
            case 1:
                EditorDeTexto.Panel.remove(EditorDeTexto.Panel.getSelectedIndex());
                break;
            case 2:
                break;
        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea texto;
    // End of variables declaration//GEN-END:variables

    private void save() {
        contenido = this.texto.getText();
        String nombre = "";
        String path = "";
        if (archivo == null) {
            nombre = EditorDeTexto.Panel.getTitleAt(EditorDeTexto.Panel.getSelectedIndex());
            JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int returnVal = chooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                path = chooser.getSelectedFile().getAbsolutePath() + "/" + nombre;
            }
        } else {
            path = archivo.getAbsolutePath();
        }

        FileWriter fichero = null;
        PrintWriter pw = null;
        try {
            fichero = new FileWriter(path);
            pw = new PrintWriter(fichero);
            pw.println(contenido);

        } catch (IOException e) {
        } finally {
            try {
                if (null != fichero) {
                    fichero.close();
                }
            } catch (IOException e2) {
            }
        }
    }

    public void initText() {

        FileReader fr = null;
        try {
            fr = new FileReader(archivo);
            BufferedReader br = new BufferedReader(fr);
            String linea = "";
            String txtAnalized = "";
            while ((linea = br.readLine()) != null) {
                txtAnalized += linea + "\n";
            }
            this.texto.setText(txtAnalized);
        } catch (FileNotFoundException ex) {

        } catch (IOException ex) {
        } finally {
            if (fr != null) {
                try {
                    fr.close();
                } catch (IOException ex) {
                }
            }
        }
    }
}
