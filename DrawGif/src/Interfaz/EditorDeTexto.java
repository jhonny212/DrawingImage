/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import AnalizadorColors.Colores;
import AnalizadorColors.ContentColor;
import AnalizadorLienzos.lienzo;
import AnalizadorPnt.Codigo;
import AnalizadorTime.Tiempos;
import AnalizadorTime.Time;
import drawgif.Fichero;
import drawgif.panelError;
import drawgif.panelTxt;
import java.awt.Dimension;
import java.awt.TextField;
import java.io.File;
import java.util.Arrays;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jhonny
 */
public class EditorDeTexto extends javax.swing.JFrame {

    /**
     * Creates new form EditorDeTexto
     */
    panelTxt lienzo, colores, tiempo, codigo;
    lienzo lz;
    Colores clr;
    Time tmp;
    Codigo pnt;

    public EditorDeTexto() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        Panel.setSize(new Dimension(this.getWidth(), this.getHeight() - 20));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jMenuItem4 = new javax.swing.JMenuItem();
        Panel = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();

        jMenu3.setText("jMenu3");

        jMenuItem1.setText("jMenuItem1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("Archivo");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Nuevo");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Abrir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Analisis");

        jMenuItem5.setText("Analizar tiempo");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Analizar colores");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Analizar codigo");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem8.setText("Analizar lienzo");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setText("Analizar todos");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Generar");

        jMenuItem10.setText("Exportar Gif");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem10);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Ayuda");
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 991, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JComboBox jcmbOpciones = null;
        String[] Lista = {"clrs", "lnz", "tmp", "pnt"};
        jcmbOpciones = new JComboBox(Lista);
        TextField txt = new TextField("Escriba el nombre");
        JOptionPane.showMessageDialog(null, txt);
        String nombre = txt.getText();
        JOptionPane.showMessageDialog(null, jcmbOpciones, "Extension del archivo", 1);
        String d = (String) jcmbOpciones.getSelectedItem();
        String(d, false, nombre, null);

    }//GEN-LAST:event_jMenuItem2ActionPerformed
    private void String(String d, boolean valid, String nombre, File fc) {
        switch (d) {
            case "clrs":
                try {
                    colores.setArchivo(null);
                    Panel.remove(colores);
                } catch (Exception e) {
                }

                colores = new panelTxt();
                Panel.addTab(nombre + "." + d, colores);
                Panel.setSelectedComponent(colores);
                if (valid) {
                    colores.setArchivo(fc);
                    colores.initText();
                }

                break;
            case "lnz":
                try {
                    lienzo.setArchivo(null);
                    Panel.remove(lienzo);
                } catch (Exception e) {
                }
                lienzo = new panelTxt();
                Panel.addTab(nombre + "." + d, lienzo);
                Panel.setSelectedComponent(lienzo);
                if (valid) {
                    lienzo.setArchivo(fc);
                    lienzo.initText();
                }

                break;
            case "tmp":
                try {
                    Panel.remove(tiempo);
                } catch (Exception e) {
                }
                tiempo = new panelTxt();
                Panel.addTab(nombre + "." + d, tiempo);
                Panel.setSelectedComponent(tiempo);
                if (valid) {
                    tiempo.setArchivo(fc);
                    tiempo.initText();
                }

                break;
            case "pnt":
                try {
                    codigo.setArchivo(null);
                    Panel.remove(codigo);
                } catch (Exception e) {
                }
                codigo = new panelTxt();
                Panel.addTab(nombre + "." + d, codigo);
                Panel.setSelectedComponent(codigo);
                if (valid) {
                    codigo.setArchivo(fc);
                    codigo.initText();
                }

                break;

        }
    }
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setMultiSelectionEnabled(false);
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.clrs", "clrs", "*.tmp", "tmp", "*.lnz", "lnz");
        fc.setFileFilter(filtro);
        fc.setAcceptAllFileFilterUsed(false);
        int seleccion = fc.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            String name = fc.getSelectedFile().getName();
            String ext = "";
            if (name.contains(".tmp")) {
                ext = "tmp";
            } else if (name.contains(".pnt")) {
                ext = "pnt";
            } else if (name.contains(".clrs")) {
                ext = "clrs";
            } else if (name.contains(".lnz")) {
                ext = "lnz";
            }
            String(ext, true, name, fc.getSelectedFile());
            //Seleccionamos el fichero
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        iniciarErrores(1);

    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        iniciarErrores(4);


    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        iniciarErrores(2);

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        iniciarErrores(3);

    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        boolean x1 = iniciarErrores(4);
        boolean x2 = iniciarErrores(2);
        boolean x3 = iniciarErrores(1);

        if (x1 && x2 && x3) {
            lz.getLienzos().stream().map((lienzo1) -> {
                Tiempos Time = null;
                ContentColor color = null;
                for (Tiempos listTime : tmp.getListTime()) {
                    if (lienzo1.getId().equals(listTime.getName())) {
                        Time = listTime;
                    }
                }
                for (ContentColor listado : clr.getListado()) {
                    if (lienzo1.getId().equals(listado.getName())) {
                        color = listado;
                    }
                }
                EditorGrafico t = new EditorGrafico();
                Panel.addTab(lienzo1.getId(), t);
                Panel.setSelectedComponent(t);
                t.setClr(color);
                t.setTmp(Time);
                t.setLz(lienzo1);
                return t;
            }).forEachOrdered((t) -> {
                t.setItems();
            });
        }
        //iniciarErrores(4);

    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        EditorGrafico t = new EditorGrafico();
        Panel.addTab("Grafico", t);
        Panel.setSelectedComponent(t);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    public boolean iniciarErrores(int type) {

        int aux = 0;
        switch (type) {
            case 4:
                try {
                    Panel.remove(lz.lexi);
                } catch (Exception e) {
                }
                try {
                    Panel.remove(lz.sintact);
                } catch (Exception e) {
                }
                try {
                    Panel.remove(lz.seman);
                } catch (Exception e) {
                }
                lz = new lienzo(this.lienzo.getTexto().getText());

                if (!lz.getErroresSintacticos().isEmpty()) {
                    lz.sintact = new panelError();
                    lz.sintact.init(lz.getErroresSintacticos());
                    Panel.addTab("Sintatico", lz.sintact);
                    Panel.setSelectedComponent(lz.sintact);
                    aux++;
                }
                if (!lz.getErroresLexico().isEmpty()) {
                    lz.lexi = new panelError();
                    lz.lexi.init(lz.getErroresLexico());
                    Panel.addTab("Lexicos", lz.lexi);
                    Panel.setSelectedComponent(lz.lexi);
                    aux++;
                }
                if (!lz.getErroresSemanticos().isEmpty()) {
                    lz.seman = new panelError();
                    lz.seman.init2(lz.getErroresSemanticos());
                    Panel.addTab("Semantico", lz.seman);
                    Panel.setSelectedComponent(lz.seman);
                    aux++;
                }

                break;

            case 1:
                try {
                    Panel.remove(tmp.lexi);
                } catch (Exception e) {
                }
                try {
                    Panel.remove(tmp.sintact);
                } catch (Exception e) {
                }
                try {
                    Panel.remove(tmp.seman);
                } catch (Exception e) {
                }
                tmp = new Time(this.tiempo.getTexto().getText());
                if (!tmp.getErroresSintacticos().isEmpty()) {
                    tmp.sintact = new panelError();
                    tmp.sintact.init(tmp.getErroresSintacticos());
                    Panel.addTab("Sintatico", tmp.sintact);
                    Panel.setSelectedComponent(tmp.sintact);
                    aux++;
                }
                if (!tmp.getErroresLexico().isEmpty()) {
                    tmp.lexi = new panelError();
                    tmp.lexi.init(tmp.getErroresLexico());
                    Panel.addTab("Lexico", tmp.lexi);
                    Panel.setSelectedComponent(tmp.lexi);
                    aux++;
                }
                if (!tmp.getErroresSemanticos().isEmpty()) {
                    tmp.seman = new panelError();
                    tmp.seman.init2(tmp.getErroresSemanticos());
                    Panel.addTab("Semantico", tmp.seman);
                    Panel.setSelectedComponent(tmp.seman);
                    aux++;
                }
                break;
            case 2:
                try {
                    Panel.remove(clr.lexi);
                } catch (Exception e) {
                }
                try {
                    Panel.remove(clr.sintact);
                } catch (Exception e) {
                }
                try {
                    Panel.remove(clr.seman);
                } catch (Exception e) {
                }
                clr = new Colores(this.colores.getTexto().getText());

                clr.init();
                if (!clr.getErroresSintacticos().isEmpty()) {
                    clr.sintact = new panelError();
                    clr.sintact.init(clr.getErroresSintacticos());
                    Panel.addTab("Sintatico", clr.sintact);
                    Panel.setSelectedComponent(clr.sintact);
                    aux++;
                }
                if (!clr.getErroresLexico().isEmpty()) {
                    clr.lexi = new panelError();
                    clr.lexi.init(clr.getErroresLexico());
                    Panel.addTab("Lexico", clr.lexi);
                    Panel.setSelectedComponent(clr.lexi);
                    aux++;
                }
                if (!clr.getErroresSemanticos().isEmpty()) {
                    clr.seman = new panelError();
                    clr.seman.init2(clr.getErroresSemanticos());
                    Panel.addTab("Semantico", clr.seman);
                    Panel.setSelectedComponent(clr.seman);
                    aux++;
                }
                break;
            case 3:
                try {
                    Panel.remove(pnt.lexi);
                } catch (Exception e) {
                }
                try {
                    Panel.remove(pnt.sintact);
                } catch (Exception e) {
                }
                try {
                    Panel.remove(pnt.seman);
                } catch (Exception e) {
                }
                pnt = new Codigo(this.codigo.getTexto().getText());

                if (!pnt.getErroresSintacticos().isEmpty()) {
                    pnt.sintact = new panelError();
                    pnt.sintact.init(pnt.getErroresSintacticos());
                    Panel.addTab("Sintatico", pnt.sintact);
                    Panel.setSelectedComponent(pnt.sintact);
                    aux++;
                }
                if (!pnt.getErroresLexico().isEmpty()) {
                    pnt.lexi = new panelError();
                    pnt.lexi.init(pnt.getErroresLexico());
                    Panel.addTab("Sintatico", pnt.lexi);
                    Panel.setSelectedComponent(pnt.lexi);
                    aux++;
                }
                if (!pnt.getErroresSemanticos().isEmpty()) {
                    pnt.lexi = new panelError();
                    pnt.lexi.init(pnt.getErroresSemanticos());
                    Panel.addTab("Sintatico", pnt.seman);
                    Panel.setSelectedComponent(pnt.seman);
                    aux++;
                }
                break;
        }
        return aux == 0;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorDeTexto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTabbedPane Panel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
